# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-09-23 16:25
from __future__ import unicode_literals

import dashboard.apps.dashboard.models
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('float_id', models.CharField(max_length=128, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('raw_data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
            options={
                'verbose_name': 'service area',
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('budget', models.DecimalField(decimal_places=2, help_text='Please enter the total budget', max_digits=16)),
                ('note', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'One off'), (2, 'Monthly'), (3, 'Annually')], default=1)),
                ('name', models.CharField(max_length=128, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['start_date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('url', models.URLField()),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['url'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('float_id', models.CharField(max_length=128, unique=True)),
                ('staff_number', models.PositiveIntegerField(null=True, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('avatar', models.URLField(null=True)),
                ('is_contractor', models.BooleanField(default=False, verbose_name='is contractor?')),
                ('job_title', models.CharField(max_length=128, null=True)),
                ('is_current', models.BooleanField(default=True, verbose_name='is current staff?')),
                ('raw_data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
            options={
                'verbose_name_plural': 'People',
                'permissions': (('upload_person', 'Can upload monthly payroll'),),
            },
            bases=(models.Model, dashboard.apps.dashboard.models.AditionalCostsMixin),
        ),
        migrations.CreateModel(
            name='PersonCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'One off'), (2, 'Monthly'), (3, 'Annually')], default=1)),
                ('name', models.CharField(max_length=128, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('note', models.TextField(blank=True, null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='costs', to='dashboard.Person')),
            ],
            options={
                'ordering': ['start_date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                ('discovery_date', models.DateField(blank=True, null=True, verbose_name='discovery start')),
                ('alpha_date', models.DateField(blank=True, null=True, verbose_name='alpha start')),
                ('beta_date', models.DateField(blank=True, null=True, verbose_name='beta start')),
                ('live_date', models.DateField(blank=True, null=True, verbose_name='live start')),
                ('end_date', models.DateField(blank=True, null=True)),
                ('hr_id', models.CharField(max_length=12, null=True, unique=True)),
                ('float_id', models.CharField(max_length=128, unique=True)),
                ('is_billable', models.BooleanField(default=True)),
                ('visible', models.BooleanField(default=True)),
                ('raw_data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='dashboard.Area', verbose_name='service area')),
                ('delivery_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dashboard.Person')),
                ('product_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dashboard.Person')),
            ],
            options={
                'permissions': (('adjustmentexport_product', 'Can run Adjustment Export'), ('intercompanyexport_product', 'Can run Intercompany Export'), ('productdetailexport_product', 'Can run Intercompany Export')),
                'verbose_name': 'product',
            },
            bases=(models.Model, dashboard.apps.dashboard.models.AditionalCostsMixin),
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                ('discovery_date', models.DateField(blank=True, null=True, verbose_name='discovery start')),
                ('alpha_date', models.DateField(blank=True, null=True, verbose_name='alpha start')),
                ('beta_date', models.DateField(blank=True, null=True, verbose_name='beta start')),
                ('live_date', models.DateField(blank=True, null=True, verbose_name='live start')),
                ('end_date', models.DateField(blank=True, null=True)),
                ('delivery_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dashboard.Person')),
                ('product_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dashboard.Person')),
                ('products', models.ManyToManyField(related_name='product_groups', to='dashboard.Product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductGroupStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'OK'), (2, 'At risk'), (3, 'In trouble')], default=1)),
                ('reason', models.TextField(blank=True, null=True)),
                ('product_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='dashboard.ProductGroup')),
            ],
            options={
                'verbose_name_plural': 'statuses',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'OK'), (2, 'At risk'), (3, 'In trouble')], default=1)),
                ('reason', models.TextField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='dashboard.Product')),
            ],
            options={
                'verbose_name_plural': 'statuses',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_type', models.PositiveSmallIntegerField(choices=[(1, 'Daily rate'), (2, 'Monthly salary'), (3, 'Yearly salary')], default=1)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_date', models.DateField()),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rates', to='dashboard.Person')),
            ],
            options={
                'ordering': ('-start_date',),
            },
        ),
        migrations.CreateModel(
            name='Saving',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'One off'), (2, 'Monthly'), (3, 'Annually')], default=1)),
                ('name', models.CharField(max_length=128, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('note', models.TextField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='savings', to='dashboard.Product')),
            ],
            options={
                'ordering': ['start_date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('days', models.DecimalField(decimal_places=5, max_digits=10)),
                ('float_id', models.CharField(max_length=128, unique=True)),
                ('raw_data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='dashboard.Person')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='dashboard.Product')),
            ],
        ),
        migrations.AddField(
            model_name='link',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='dashboard.Product'),
        ),
        migrations.AddField(
            model_name='cost',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='costs', to='dashboard.Product'),
        ),
        migrations.AddField(
            model_name='budget',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to='dashboard.Product'),
        ),
        migrations.AddField(
            model_name='area',
            name='manager',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dashboard.Person', verbose_name='service manager'),
        ),
        migrations.AlterUniqueTogether(
            name='rate',
            unique_together=set([('start_date', 'person')]),
        ),
    ]
